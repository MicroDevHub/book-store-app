import express, { Request, Response, NextFunction } from 'express';import { body } from 'express-validator';import {    validateRequest,    NotFoundError,    requireAuth,    NotAuthorizedError,} from '@hh-bookstore/common';import { Book } from '../models/book';const router = express.Router();router.put(    '/api/books/:id',    requireAuth,    [        body('title').not().isEmpty().withMessage('Title is required'),        body('price')            .isFloat({ gt: 0 })            .withMessage('Price must be provided and must be greater than 0'),    ],    validateRequest,    async (req: Request, res: Response, next: NextFunction) => {        const ticket = await Book.findById(req.params.id);        if (!ticket) {            return next(new NotFoundError());        }        if (ticket.userId !== req.currentUser!.id) {            return next(new NotAuthorizedError());        }        ticket.set({            title: req.body.title,            price: req.body.price,        });        await ticket.save();        res.send(ticket);    });export { router as updateTicketRouter };