import express, { Request, Response, NextFunction } from 'express';import { body, validationResult } from 'express-validator';import jwt from 'jsonwebtoken';import config from 'config';import { RequestValidationError } from "../errors/request-validation-error";import { User } from '../models/user';import { BadRequestError } from "../errors/bad-request-error";import { validateRequest } from '../middlewares/validate-request';const router = express.Router();router.post('/api/users/signup',    [        body('email')            .isEmail()            .withMessage('Email must be valid'),        body('password')            .trim()            .isLength({ min:4, max:20 })            .withMessage('Password must be between 4 and 20 characters')    ],    validateRequest    ,async (req: Request, res: Response, next: NextFunction) => {        const { email, password } = req.body;        const existingUser = await User.findOne({ email });        if (existingUser) {            return next(new BadRequestError('Email in use'));        }        const user = User.build({ email, password });        await user.save();        // Generate JWT        const userJwt = jwt.sign(            {                id: user.id,                email: user.email            },            config.get('jwt_key')        );        // Store it on session object        req.session = {            jwt: userJwt        };        res.status(201).send(user);});export { router as signupRouter };